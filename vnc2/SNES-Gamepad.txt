SNES-Gamepad:


/* the device descriptor */
static code Byte dev_desc[] = {
   0x12, // bLength             : Length of Descriptor
   0x01, // bDescriptorType     : Descriptor Type = Device
   0x10, // bcdUSB (L)          : USB Specification Version 1.10 (L)
   0x01, // bcdUSB (H)          : USB Specification Version 1.10 (H)
   0x00, // bDeviceClass        : Device Class (0xff is Vendor Specific)
   0x00, // bDeviceSubClass     : Device Sub-Class (0xff is Vendor Specific)
   0x00, // bDeviceProtocol     : Device Protocol (0xff is Vendor Specific)
   0x40, // bMaxPacketSize0     : Maximum Packet Size for EP0
   0xcd, // idVendor (L)        : Vendor ID (L)
   0x06, // idVendor (H)        : Vendor ID (H)
   0x05, // idProduct (L)       : Product ID (L)
   0xc0, // idProduct (H)       : Product ID (H)
   0x00, // bcdDevice (L)       : Device Release Number (BCD,L)
   0x01, // bcdDevice (H)       : Device Release Number (BCD,H)
   0x01, // iManufacturer       : Manufacturer Index String
   0x02, // iProduct            : Product Index String
   0x00, // iSerialNumber       : Serial Number Index String
   0x01  // bNumConfigurations  : Number of Configurations in this Device
};

/* the configuration descriptor */
static code Byte conf_desc[] = {
   0x09, // bLength             : Length of Descriptor
   0x02, // bDescriptorType     : Descriptor Type = Configuration
   0x3b, // wTotalLength (L)    : Total Length (L) including Interface and Endpoint
   0x00, // wTotalLength (H)    : Total Length (H)

   0x02, // bNumInterfaces      : One Interface in this Configuration

   0x01, // bConfigurationValue : Configuration Value Used by Set_Configuration Request
         //                       to Select this Configuration
   0x00, // iConfiguration      : Index of String Describing this Configuration
   0x80, // bmAttributes        : Attributes
   0x32, // MaxPower            : Maximum Power


   /*
    * The interface descriptor for Pad 1
    */
   // Interface 0, alternate setting 0
   0x09, // bLength             : Length of Descriptor
   0x04, // bDescriptorType     : Descriptor Type = Interface
   0x00, // bInterfaceNumber    : Zero-based index of this Interface
   0x00, // bAlternateSetting   : Alternate Setting
   0x01, // bNumEndpoints       : Number of Endpoints in this Interface
   0x03, // bInterfaceClass     : Interface Class
   0x00, // bInterfaceSubClass  : Interface Sub-Class (boot interface)
   0x00, // bInterfaceProtocol  : Interface Protocol (keyboard)
   0x03, // iInterface          : Index to String Descriptor for this Interface
   
   // HID Descriptor
   0x09, // bLength             : Length of Descriptor
   0x21, // bDescriptorType     : Descriptor Type = HID
   0x00, // bcdHID (L)          : HID Class Specification release number (L)
   0x01, // bcdHID (H)          : HID Class Specification release number (H)
   0x00, // bCountryCode        : Hardware target country = not specific
   0x01, // bNumDescriptors     : Number of HID class descriptors to follow
   0x22, // bDescriptorType     : Report descriptor type
   0x36, // wDescriptorLength(L): Total length of Report descriptor (L)
   0x00, // wDescriptorLength(H): Total length of Report descriptor (H)
   
   // Endpoint Descriptor
   0x07, // bLength             : Length of Descriptor
   0x05, // bDescriptorType     : Descriptor Type = Endpoint
   0x81, // bEndpointAddress    : Endpoint Address
   0x03, // bmAttributes        : Endpoint Attributes = INT
   0x02, // wMaxPacketSize (L)  : Maximum Packet Size (L)
   0x00, // wMaxPacketSize (H)  : Maximum Packet Size (H)
   0x0a, // bInterval           : Polling intervall in Milliseconds


   /*
    * The interface descriptor for Pad 2
    */
   // Interface 1, alternate setting 0
   0x09, // bLength             : Length of Descriptor
   0x04, // bDescriptorType     : Descriptor Type = Interface
   0x01, // bInterfaceNumber    : Zero-based index of this Interface
   0x00, // bAlternateSetting   : Alternate Setting
   0x01, // bNumEndpoints       : Number of Endpoints in this Interface
   0x03, // bInterfaceClass     : Interface Class
   0x00, // bInterfaceSubClass  : Interface Sub-Class (boot interface)
   0x00, // bInterfaceProtocol  : Interface Protocol (keyboard)
   0x03, // iInterface          : Index to String Descriptor for this Interface
   
   // HID Descriptor
   0x09, // bLength             : Length of Descriptor
   0x21, // bDescriptorType     : Descriptor Type = HID
   0x00, // bcdHID (L)          : HID Class Specification release number (L)
   0x01, // bcdHID (H)          : HID Class Specification release number (H)
   0x00, // bCountryCode        : Hardware target country = not specific
   0x01, // bNumDescriptors     : Number of HID class descriptors to follow
   0x22, // bDescriptorType     : Report descriptor type
   0x36, // wDescriptorLength(L): Total length of Report descriptor (L)
   0x00, // wDescriptorLength(H): Total length of Report descriptor (H)
   
   // Endpoint Descriptor
   0x07, // bLength             : Length of Descriptor
   0x05, // bDescriptorType     : Descriptor Type = Endpoint
   0x82, // bEndpointAddress    : Endpoint Address
   0x03, // bmAttributes        : Endpoint Attributes = INT
   0x02, // wMaxPacketSize (L)  : Maximum Packet Size (L)
   0x00, // wMaxPacketSize (H)  : Maximum Packet Size (H)
   0x0a  // bInterval           : Polling intervall in Milliseconds
};


/* The Pad Report Descriptor */
static code Byte report_desc_pad[] = {
   0x05, 0x01, // Usage Page (Generic, Desktop),
   0x09, 0x05, // Usage (Game Pad),
   0xa1, 0x01, // Collection (Application),

   /* Pointer */
   0x09, 0x01, //   Usage (Pointer),
   0xa1, 0x00, //   Collection (Physical),
   0x09, 0x30, //     Usage (X),
   0x09, 0x31, //     Usage (Y),
   0x15, 0xff, //     Logical Minimum (-1),
   0x25, 0x01, //     Logical Maximum (+1),
   0x95, 0x02, //     Report Count (2),
   0x75, 0x02, //     Report Size (2),
   0x81, 0x02, //     Input (Data, Variable, Absolute, No Null),
   0xc0,       //   End Collection,

   /* Padding */
   0x95, 0x04, //   Report Count (4),
   0x75, 0x01, //   Report Size (1),
   0x81, 0x03, //   Input (Constant, Variable, Absolute),

   /* 8 Buttons */
   0x05, 0x09, //   Usage Page (Buttons),
   0x19, 0x01, //   Usage Minimum (Button 1),
   0x29, 0x08, //   Usage Maximum (Button 8),
   0x15, 0x00, //   Logical Minimum (0),
   0x25, 0x01, //   Logical Maximum (1),
   0x95, 0x08, //   Report Count (8),
   0x75, 0x01, //   Report Size (1),
   0x81, 0x02, //   Input (Data, Variable, Absolute, No Null),

   0xc0        // End Collection
};

